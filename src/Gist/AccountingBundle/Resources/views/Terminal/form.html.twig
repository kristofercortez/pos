{% extends "GistTemplateBundle::base.html.twig" %}
{% import "GistTemplateBundle::form.html.twig" as form %}

{% block content %}
    <div class="row">
        <div class="col-md-12">
            <div class="portlet box blue-hoki">
                <div class="portlet-title">
                    <div class="caption">{% block form_header %}Role{% endblock %}</div>
                </div>
                <div class="portlet-body form">
                    <!-- BEGIN FORM-->
                    <form method="post" class="form-horizontal">
                        <div class="form-body">
                            <h4 class="form-section">Information</h4>
                            <input type="hidden" id="sourceValues" value="{{object.getBank|default('')}}">
                            {{ form.group_select('Actual Location', 'actual_location',pos_locations_opts, object.getActualLocation.getID|default(''), 3, 4, readonly) }}
                            {{ form.group_select('Registered Location', 'registered_location',pos_locations_opts, object.getRegisteredLocation.getID|default(''), 3, 4, readonly) }}
                            {{ form.group_select('Terminal Operator', 'terminal_operator', terminal_operator_opts, object.getTerminalOperator.getID|default(''), 3, 4, readonly) }}
                            {{ form.group_select('Terminal of', 'terminal_of', bank_opts, object.getTerminalOf|default(''), 3, 4, readonly) }}
                            {{ form.group_select_multiple('Bank', 'bank[]', bank_opts, '', 3, 4, readonly) }}
                            {{ form.group_select('Account', 'bank_account',bank_account_opts, object.getBankAccount.getID|default(''), 3, 4, readonly) }}
                            {{ form.group_select('Payment Type', 'payment_type', payment_type_opts, object.getPaymentType|default(''), 3, 4, readonly) }}
                            {{ form.group_text('MID', 'mid', object.getMID|default(''), 3, 4, readonly) }}
                            {{ form.group_text('TID', 'tid', object.getTID|default(''), 3, 4, readonly) }}
                            {{ form.group_text('Serial No.', 'serial_number', object.getSerialNumber|default(''), 3, 4, readonly) }}
                            {{ form.group_text('Sim Card No.', 'sim_number', object.getSimCardNumber|default(''), 3, 4, readonly) }}
                            {{ form.group_text('Brand', 'brand', object.getBrand|default(''), 3, 4, readonly) }}
                            {{ form.group_text('Model', 'model', object.getModel|default(''), 3, 4, readonly) }}
                            {{ form.group_select('Status', 'status', status_opts, object.getStatus|default(''), 3, 4, readonly) }}
                            
                            {{ form.group_textarea('Remarks', 'remarks',object.getRemarks|default(''),3,3,4)}}
                        </div>
                        <div class="form-actions fluid">
                            <div class="col-md-9">
                                {% if not readonly %}
                                    <button type="submit" class="btn blue">Submit</button>
                                {% endif %}
                                <a href="{{ path(route_list) }}" class="btn default">Cancel</a>
                            </div>
                        </div>
                    </form>
                    <!-- END FORM-->
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block js %}
    <script>
        $(document).ready(function() {
            FormValidation.init(); // init form validation

            var selectedValues = $("#sourceValues").val().split(',');
            $(".select_2-multi").val(selectedValues).trigger("change");

            // set default error and success elements
            jQuery.validator.setDefaults({
                errorClass: 'help-block',
                errorElement: 'span',
                errorPlacement: function(error, element) {
                    if(element.parent().parent().hasClass('form-group'))
                    {
                        error.appendTo(element.parent().last());
                        element.parent().parent().addClass('has-error');
                    }
                    else
                    {
                        error.appendTo(element.parent().parent().last());
                        element.parent().parent().parent().addClass('has-error');
                    }
                },
                success: function(element) {
                    if(element.parent().parent().hasClass('form-group'))
                    {
                        element.parent().parent().removeClass('has-error');
                        element.parent().parent().addClass('has-success');
                    }
                    else
                    {
                        element.parent().parent().parent().removeClass('has-error');
                        element.parent().parent().parent().addClass('has-success');
                    }

                    element.remove();
                }
            });

            // validate form elements
            $(".form-horizontal").validate({
                onfocusout: function(element) {
                    this.element(element);
                },
                rules: {
                    MID: {
                        required: true
                    },
                    TID: {
                        required: true
                    },
                    terminal_of: {
                        required: true
                    },
                },
                submitHandler: function(form) {
                    form.submit();
                }
            });
        });
    </script>
{% endblock %}
