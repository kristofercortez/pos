{% extends "GistTemplateBundle::base.html.twig" %}
{% import "GistTemplateBundle::form.html.twig" as form %}

{% block content %}
<div class="row">
    <div class="col-md-12">
        <div class="portlet box blue-hoki">
            <div class="portlet-title">
                <div class="caption">{% block form_header %}Role{% endblock %}</div>
            </div>
            <div class="portlet-body form">
                <!-- BEGIN FORM-->
                <form method="post" class="form-horizontal">
                    <div class="form-body">
                        <h4 class="form-section">Information</h4>
                        {{ form.group_select('Type', 'type', type_opts, object.getType|default('0'), 3, 4, readonly) }}
                        {{ form.group_text('Company Name', 'name', object.getName|default(''), 3, 4, readonly) }}

                        {{ form.group_text('Last Name', 'last_name', object.getLastName|default(''), 3, 4, readonly) }}
                        {{ form.group_text('First Name', 'first_name', object.getFirstName|default(''), 3, 4, readonly) }}
                        {{ form.group_text('Middle Name', 'middle_name', object.getMiddleName|default(''), 3, 4, readonly) }}

                        {{ form.group_text('TIN', 'tin', object.getTIN|default(''), 3, 4, readonly) }}
                        {{ form.group_select('Category', 'category', category_opts, object.getCategory|default('0'), 3, 4, readonly) }}
                        {{ form.group_select('Tax', 'tax', tax_opts, object.getTax|default('0'), 3, 4, readonly) }}
                        {{ form.group_number('Shipment Period (days)', 'shipment_period', object.getShipmentPeriod|default(''), 3, 4, readonly) }}

                        {{ form.group_text('Contact Person', 'contact_person', object.getContactPerson|default(''), 3, 4, readonly) }}
                        {{ form.group_text('Telephone No.', 'telephone', object.getTelephone|default(''), 3, 4, readonly) }}
                        {{ form.group_text('Mobile No.', 'mobile', object.getMobile|default(''), 3, 4, readonly) }}
                        {{ form.group_text('Fax No.', 'fax', object.getFax|default(''), 3, 4, readonly) }}
                        {{ form.group_text('Website', 'website', object.getWebsite|default(''), 3, 4, readonly) }}
                        {{ form.group_text('Email', 'email', object.getEmail|default(''), 3, 4, readonly) }}
                        {{ form.group_select('Status', 'status', status_opts, object.getStatus|default('0'), 3, 4, readonly) }}

                    </div>
                    <div class="form-actions fluid">
                        <div class="col-md-9">
                            {% if not readonly %}
                            <button type="submit" class="btn blue">Submit</button>
                            {% endif %}
                            <a href="{{ path(route_list) }}" class="btn default">Cancel</a>
                        </div>
                    </div>
                </form>
                <!-- END FORM-->
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block js %}

<script>
  
$(document).ready(function() {
    FormValidation.init(); // init form validation


   
    // set default error and success elements
    jQuery.validator.setDefaults({
        errorClass: 'help-block',
        errorElement: 'span',
        errorPlacement: function(error, element) {
            if(element.parent().parent().hasClass('form-group'))
            {
                error.appendTo(element.parent().last());
                element.parent().parent().addClass('has-error');
            }
            else
            {
                error.appendTo(element.parent().parent().last());
                element.parent().parent().parent().addClass('has-error');
            }
        },
        success: function(element) {
            if(element.parent().parent().hasClass('form-group'))
            {  
                element.parent().parent().removeClass('has-error');
                element.parent().parent().addClass('has-success');
            }
            else
            {  
                element.parent().parent().parent().removeClass('has-error');
                element.parent().parent().parent().addClass('has-success');
            }

            element.remove();
        }
    });

    // validate form elements
    $(".form-horizontal").validate({
        onfocusout: function(element) {
           this.element(element);
        },
        rules: {
            name: {
                required: true
            }
        },  
        submitHandler: function(form) {
            form.submit();
        }
    });
});
</script>
{% endblock %}
