{% extends "GistTemplateBundle::base.html.twig" %}
{% import "GistTemplateBundle::form.html.twig" as form %}

{% block content %}
<div class="row">
    <div class="col-md-12">
        <div class="portlet box blue-hoki">
            <div class="portlet-title">
                <div class="caption">{% block form_header %}Role{% endblock %}</div>
            </div>
            <div class="portlet-body form">
                <!-- BEGIN FORM-->
                <form method="post" class="form-horizontal">
                    <div class="form-body">
                        <h4 class="form-section">Information</h4>
                        {{ form.group_text('Name', 'name', object.getName, 3, 4, readonly) }}
                        {{ form.group_select('Department', 'department', department_opts, object.getDepartment.getID|default('0'), 3, 4, readonly) }}
                        {{ form.group_select('Head', 'head', position_opts, object.getParent.getID|default('0'), 3, 4, readonly) }}
                        {{ form.group_textarea('Job Description', 'job_description',object.getJobDescription|default(''),3,3,4)}}
                        {{ form.hidden('csrf_token',app.session.get('csrf_token')) }}

                        
                    </div>
                    <div class="form-actions fluid">
                        <div class="col-md-9">
                            {% if not readonly %}
                            <button type="submit" class="btn blue">Submit</button>
                            {% endif %}
                            <a href="{{ path(route_list) }}" class="btn default">Cancel</a>
                        </div>
                    </div>
                </form>
                <!-- END FORM-->
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block js %}

<script>
    function updateHeads()
    {
        var path;
        var department = $('#cform-department').val();
        path = "{{path('cat_user_group_get_positions', {'parent': 'PARENT'})}}";
        path = path.replace('PARENT', department);

        var $element = $('#cform-head').select2();
        var $request = $.ajax({
            url: path
        });

        $request.then(function (data)
        {
            //clear previous options
            $('#cform-head option').remove();
            //loop through all returned data then append
            $.each(data, function(k, v) {
                $('#cform-head').append('<option value="'+v.id+'">'+v.text+'</option>');
            });
            //refresh element
            $element.trigger('change');
        });
    }
$(document).ready(function() {
    FormValidation.init(); // init form validation


    $('#cform-department').on("change", function()
    {
        //updateHeads();
    });
    
    // set default error and success elements
    jQuery.validator.setDefaults({
        errorClass: 'help-block',
        errorElement: 'span',
        errorPlacement: function(error, element) {
            if(element.parent().parent().hasClass('form-group'))
            {
                error.appendTo(element.parent().last());
                element.parent().parent().addClass('has-error');
            }
            else
            {
                error.appendTo(element.parent().parent().last());
                element.parent().parent().parent().addClass('has-error');
            }
        },
        success: function(element) {
            if(element.parent().parent().hasClass('form-group'))
            {  
                element.parent().parent().removeClass('has-error');
                element.parent().parent().addClass('has-success');
            }
            else
            {  
                element.parent().parent().parent().removeClass('has-error');
                element.parent().parent().parent().addClass('has-success');
            }

            element.remove();
        }
    });


    // validate form elements
    $(".form-horizontal").validate({
        onfocusout: function(element) {
           this.element(element);
        },
        rules: {
            name: {
                required: true
            }
        },  
        submitHandler: function(form) {
            form.submit();
        }
    });
});
</script>
{% endblock %}
