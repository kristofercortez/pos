{% extends "GistTemplateBundle::base.html.twig" %}
{% import "GistTemplateBundle::form.html.twig" as form %}

{% block content %}
<div class="row">
    <div class="col-md-12">
        <div class="portlet box blue-hoki">
            <div class="portlet-title">
                <div class="caption">{% block form_header %}{% endblock %}</div>
            </div>
        <div class="portlet-body form">
        <!-- BEGIN FORM-->
            <form method="post" class="form-horizontal">
                <div class="form-body">
                    <div class="form-group">
                        {{ form.hidden('csrf_token',app.session.get('csrf_token')) }}
                        {{ form.group_text('Holiday Name','name',object.getName|default(''),3,4,readonly)}}
                        {{ form.group_select('Type','type',type_opts,object.getType|default(''),3,4,readonly)}}
                        {{ form.group_date('Date','date',object.getDate|date('m/d/Y'),3,4,readonly)}}
                    </div> 
                <div class="form-actions fluid">
                    <div class="col-md-offset-3 col-md-12">
                        {% if not readonly %}
                            <button type="submit" class="btn blue">Submit</button>
                        {% endif %} 
                            <a href="{{ path(route_list) }}" class="btn default">Cancel</a>
                    </div>
                </div>
            </form>
        <!-- END FORM-->
        </div>
        </div>
    </div>
</div>
{% endblock %}

{% block js%}
<script>
$(document).ready(function() {
    // set default error and success elements
    jQuery.validator.setDefaults({
        errorClass: 'help-block',
        errorElement: 'span',
        errorPlacement: function(error, element) {
            if(element.parent().parent().hasClass('form-group'))
            {
                error.appendTo(element.parent().last());
                element.parent().parent().addClass('has-error');
            }
            else if(element.parent().parent().hasClass('checker'))
            {   
                error.appendTo(element.parent().parent().parent().parent().last());
                element.parent().parent().parent().parent().parent().parent().addClass('has-error');
            }
            else if(element.parent().parent().hasClass('radio'))
            {   
                error.appendTo(element.parent().parent().parent().parent().last());
                element.parent().parent().parent().parent().parent().parent().addClass('has-error');
            }
            else
            {
                error.appendTo(element.parent().parent().last());
                element.parent().parent().parent().addClass('has-error');
            }
        },
        success: function(element) {
            if(element.parent().parent().hasClass('form-group'))
            {  
                element.parent().parent().removeClass('has-error');
                element.parent().parent().addClass('has-success');
            }
            else if(element.parent().parent().hasClass('checker'))
            {   
                element.parent().parent().parent().parent().parent().removeClass('has-error');
                element.parent().parent().parent().parent().parent().addClass('has-success');
            }
            else if(element.parent().parent().hasClass('radio'))
            {   
                element.parent().parent().parent().parent().parent().removeClass('has-error');
                element.parent().parent().parent().parent().parent().addClass('has-success');
            }
            else
            {  
                element.parent().parent().parent().removeClass('has-error');
                element.parent().parent().parent().addClass('has-success');
            }

            element.remove();
        }
    });

    // var emp_opts = $("input[name='emp_opts']");

    // validate form elements
    $(".form-horizontal").validate({
        onfocusout: function(element) {
           this.element(element);
        },
        rules: {
            name: "required",
            type: "required",
            date: "required",
        },
        messages: {
            name: "Holiday Name cannot be blank.",
            type: "Please select Holiday Type",
            date: "Please set date of Holiday.",
        },
        submitHandler: function(form) {
            form.submit();
        }
    });
});
</script>
{% endblock %}