{% extends "GistTemplateBundle::base.html.twig" %}
{% import "GistTemplateBundle::form.html.twig" as form %}

{% block content %}
<div class="row">
    <div class="col-md-12">
        <div class="portlet box blue-hoki">
            <div class="portlet-title">
                <div class="caption">{{ action }} {{ head_title }} {{ action == "Edit" ? '- ' ~ o_label : '' }}</div>
            </div>
            <div class="portlet-body form">
                <!-- BEGIN FORM-->
                <form method="post" class="form-horizontal">
                    <div class="form-body">
                        <h4 class="form-section">Information</h4>
                        {{ form.hidden('csrf_token',app.session.get('csrf_token')) }}
                        {{ form.group_text('Name','name',object.getName|default(''),3,4) }}
                        {{ form.group_textarea('Description','desc',object.getNotes|default(''),3,3,4) }}
                        <div class="form-group">
                            <label class="col-md-3 control-label">Gender</label>
                            <div class="col-md-5">
                                {{ form.checkbox_set('gender', gender_opts, object.getGender) }}
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Employment Status</label>
                            <div class="col-md-5">
                                {{ form.checkbox_set('emp_status', emp_status_opts, object.getEmpStatus) }}
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Leave Accrued</label>
                            <div class="col-md-4">
                                {{ form.radio_set('accrued_enabled',accrued_opts,object.getAccrueEnabled|default(0)) }}   
                            </div>
                        </div>
                        <div id="accrue_settings" {{ object.getAccrueEnabled == 0 ? 'style="display:none;"' : "" }}>
                            {{ form.group_number('Accrued Time (in minutes)','accrue_time',object.AccrueCount|default('0'),4,4) }}
                            {{ form.group_select('Accrual Rule','accrue_rule',accrue_rule_opts,object.getAccrueRule|default(''),4,4) }}
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Leave Carried</label>
                            <div class="col-md-4">
                                {{ form.radio_set('carried_enabled',carried_opts,object.getCarriedEnabled|default(0),object.getAccrueEnabled == 0 ? true : false) }}   
                            </div>
                        </div>
                        <div id="carried_settings" {{ object.getCarriedEnabled == 0 ? 'style="display:none;"' : "" }}>
                            {{ form.group_number('Percentage Carried Forward','carry_percentage',object.getCarryPercentage|default('0'),4,4) }}
                            {{ form.group_number('Availability Period (in weeks)','carry_period',object.getCarryPeriod|default('0'),4,4) }}
                        </div>
                        {{ form.group_number('Leave Count (in days)','leave_count',object.getLeaveCount|default(0),3,4) }}
                        <div class="form-group">
                            <label class="col-md-3 control-label"></label>
                            <div class="col-md-4">
                                {{ form.radio_set('count_type',count_type,object.getCountType|default('per Year')) }}   
                            </div>
                        </div>
                        {{ form.group_number('Months of Service required (minimum)','service_months',object.getServiceMonths|default(0),3,4) }}
                        {{ form.group_select('Payment Type','payment_type',payment_type,object.getPaymentType|default('0'),3,4) }}

                        <h4 class="form-section">Requirements</h4>
                        <div class="row" style="margin-bottom: 10px;">
                            <div class="col-md-5">
                                {{ form.group_text('Requirement Name','req_name','',4,8) }}
                            </div>
                            <div class="col-md-5">
                                {{ form.group_select('Requirement Type','req_type',req_type,'',4,8) }}
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn green" id="add_requirement"><i class="fa fa-plus"></i> Add</button>
                            </div>
                        </div>
                        <div class="portlet-body">
                            <table class="table table-striped table-bordered table-hover" id="list_table">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Requirement Type</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody id="req_list">
                                    {% if requirements is defined and requirements is not empty %}
                                        {% for req in requirements %}
                                        <tr class="odd gradeX">
                                            <td>{{ req.getName }}<input type="hidden" name="req_name[]" value="{{ req.getName }}"></td>
                                            <td>
                                                {% for value,display in req_type %}
                                                {{ req.getReqType is same as(value) ? display : '' }}
                                                {% endfor %}
                                                <input type="hidden" name="req_type[]" value="{{ req.getReqType }}">
                                                <td><buton class="btn btn-xs red remove_req_field"><i class="fa fa-minus"></i> Remove</button></td>
                                            </td>
                                        </tr>
                                        {% endfor %}
                                    {% else %}
                                    <tr class="odd empty">
                                        <td valign="top" colspan="6" class="dataTables_empty">No Requirement added yet.</td>
                                    </tr>
                                    {% endif %}
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="form-actions fluid">
                        <div class="col-md-9">
                            {% if not readonly %}
                            <button type="submit" class="btn blue">Submit</button>
                            {% endif %} 
                            <a href="{{ path(route_list) }}" class="btn default">Cancel</a>
                        </div>
                    </div>
                </form>
                <!-- END FORM-->
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block js %}
<script>
$(document).ready( function() {

    $('input[name="accrued_enabled"]').click(function() {
        var val = $(this).val();
        if (val == 1) {
            $('#accrue_settings').show();
            $('input[name="carried_enabled"]').attr('disabled',false);
            $('input[name="carried_enabled"]').closest('div').removeClass('disabled');
        } else{
            $('#accrue_settings').hide();
            $('input[name="carried_enabled"]').attr('disabled',true);
            $('input[name="carried_enabled"]').closest('div[class="radio"]').addClass('disabled');
            $('input[name="carried_enabled"][value="' + 0 + '"]').prop('checked', true);
            $('input[name="carried_enabled"][value="' + 0 + '"]').parent('span').addClass('checked');
            $('input[name="carried_enabled"][value="' + 1 + '"]').parent('span').removeClass('checked');
        };
    });

    $('input[name="carried_enabled"]').click(function() {
        var val = $(this).val();
        if (val == 1) {
            $('#carried_settings').show();
        } else{
            $('#carried_settings').hide();
        };
    });

    $('#add_requirement').click(function(e){
        e.preventDefault();
        if ($('input[name="req_name"]').val() == '' || $('input[name="req_name"]').val() == null) {
            bootbox.alert("Name required. Please input Requirement Name.");
        }
        else {
            $('.empty').remove();
            var name = $('input[name="req_name"]').val();
            var type = $('select[name="req_type"]').val();
            var text = $('select[name="req_type"] option:selected').text();

            var html = '<tr class="odd gradeX">';
            html += '<td>'+ name +'<input type="hidden" name="req_name[]" value="'+ name +'"></td>';
            html += '<td>'+ text +'<input type="hidden" name="req_type[]" value="'+ type +'"></td>';
            html += '<td><buton class="btn btn-xs red remove_req_field"><i class="fa fa-minus"></i> Remove</button></td></tr>';

            $("#req_list").append(html); //add input box
            $('input[name="req_name"]').val('');
            $('select[name="req_type"]').select2("val", 0);
        };
    });

    $('#req_list').on("click",".remove_req_field", function(e){ //user click on remove text
        e.preventDefault();
        $(this).closest('tr').remove();

        var tbody = $('#req_list');
        if (tbody.children().length == 0) {
            tbody.html('<tr class="odd empty"><td valign="top" colspan="6" class="dataTables_empty">No Requirement added yet.</td></tr>');
        }
    });


// FormValidation.init(); // init form validation

    // set default error and success elements
    // jQuery.validator.setDefaults({
    //     errorClass: 'help-block',
    //     errorElement: 'span',
    //     errorPlacement: function(error, element) {
    //         if(element.parent().parent().hasClass('form-group'))
    //         {
    //             error.appendTo(element.parent().last());
    //             element.parent().parent().addClass('has-error');
    //         }
    //         else if(element.parent().parent().hasClass('checker'))
    //         {   
    //             error.appendTo(element.parent().parent().parent().parent().last());
    //             element.parent().parent().parent().parent().parent().parent().addClass('has-error');
    //         }
    //         else if(element.parent().parent().hasClass('radio'))
    //         {   
    //             error.appendTo(element.parent().parent().parent().parent().last());
    //             element.parent().parent().parent().parent().parent().parent().addClass('has-error');
    //         }
    //         else
    //         {
    //             error.appendTo(element.parent().parent().last());
    //             element.parent().parent().parent().addClass('has-error');
    //         }
    //     },
    //     success: function(element) {
    //         if(element.parent().parent().hasClass('form-group'))
    //         {  
    //             element.parent().parent().removeClass('has-error');
    //             element.parent().parent().addClass('has-success');
    //         }
    //         else if(element.parent().parent().hasClass('checker'))
    //         {   
    //             element.parent().parent().parent().parent().parent().removeClass('has-error');
    //             element.parent().parent().parent().parent().parent().addClass('has-success');
    //         }
    //         else if(element.parent().parent().hasClass('radio'))
    //         {   
    //             element.parent().parent().parent().parent().parent().removeClass('has-error');
    //             element.parent().parent().parent().parent().parent().addClass('has-success');
    //         }
    //         else
    //         {  
    //             element.parent().parent().parent().removeClass('has-error');
    //             element.parent().parent().parent().addClass('has-success');
    //         }

    //         element.remove();
    //     }
    // });

    // // validate form elements
    // $(".form-horizontal").validate({
    //     onfocusout: function(element) {
    //        this.element(element);
    //     },
    //     rules: {
    //         name: "required",
    //         characteristics: "required",
    //         'emp_opts[]': "required",
    //         'gender[]': "required"
    //     },
    //     messages: {
    //         name: "Name cannot be blank.",
    //         characteristics: "Please select 1.",
    //         'emp_opts[]': "Please select 1.",
    //         'gender[]': "Please select 1."
    //     },
    //     submitHandler: function(form) {
    //         form.submit();
    //     }
    // });
});
</script>
{% endblock %}